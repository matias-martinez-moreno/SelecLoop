# Generated by Django 5.2.4 on 2025-09-29 02:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Nombre del logro (ej: 'Primera Reseña', 'Experto en Reseñas')", max_length=100, verbose_name='Nombre del logro')),
                ('description', models.TextField(help_text='Descripción detallada del logro y cómo obtenerlo', verbose_name='Descripción')),
                ('icon', models.CharField(default='fas fa-star', help_text="Clase de FontAwesome para el icono (ej: 'fas fa-star', 'fas fa-trophy')", max_length=50, verbose_name='Icono')),
                ('color', models.CharField(default='gold', help_text='Color del logro (gold, silver, bronze, blue, green, red)', max_length=20, verbose_name='Color')),
                ('achievement_type', models.CharField(choices=[('first_review', 'Primera Reseña'), ('review_count', 'Cantidad de Reseñas'), ('company_count', 'Cantidad de Empresas'), ('work_history', 'Historial Laboral'), ('special', 'Especial')], help_text='Tipo de logro que determina cómo se otorga', max_length=20, verbose_name='Tipo de logro')),
                ('required_value', models.IntegerField(default=1, help_text='Valor necesario para obtener el logro (ej: 5 reseñas, 3 empresas)', verbose_name='Valor requerido')),
                ('is_active', models.BooleanField(default=True, help_text='Indica si el logro está disponible para obtener', verbose_name='Activo')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de creación')),
            ],
            options={
                'verbose_name': 'Logro',
                'verbose_name_plural': 'Logros',
                'ordering': ['achievement_type', 'required_value'],
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de obtención')),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_achievements', to='core.achievement', verbose_name='Logro')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to='core.userprofile', verbose_name='Perfil de usuario')),
            ],
            options={
                'verbose_name': 'Logro de Usuario',
                'verbose_name_plural': 'Logros de Usuario',
                'ordering': ['-earned_at'],
                'unique_together': {('user_profile', 'achievement')},
            },
        ),
    ]
